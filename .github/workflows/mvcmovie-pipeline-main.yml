name: mvcmovie-pipeline-main-branch

on: 
  push:
    branches:
      - 'main'

jobs:
  build-and-test:
    name: Build and Test Application
#     runs-on: [self-hosted, onprem]
    runs-on: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  run-sonarqube-scan:
    name: Run SonarQube Scan
#     runs-on: [self-hosted, onprem]
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2.2.0
      with:
        # Disabling shallow clone is recommended for improving relevancy of sonarqube reporting
        fetch-depth: 0
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    - name: Install dependencies
      run: dotnet restore
    - name: Sonarqube Scan
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet sonarscanner begin /k:${{ secrets.SONAR_PROJECT_KEY }} /o:${{ secrets.SONAR_ORG }} /d:sonar.host.url=${{ secrets.SONAR_HOST_URL }} /d:sonar.login=${{ secrets.SONAR_LOGIN_TOKEN }} /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
        dotnet build
        dotnet test --settings coverlet.runsettings --logger:trx
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_LOGIN_TOKEN }}"
      env:
        ASPNETCORE_ENVIRONMENT: Development

  build-push-docker-image:
    name: Build Docker Image and Push to Docker Hub
    needs: build-and-test
#     runs-on: [self-hosted, onprem]
    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout 
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/uem-mvcmovie:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/uem-mvcmovie:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/uem-mvcmovie:buildcache,mode=max
